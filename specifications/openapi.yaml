openapi: 3.1.0

info:
    title: PassWordManagerAPI
    version: 1.0.0
    description: >-
        PassWordManager API used to manage users, personal credential databases and
        the services offered to the user
    contact:
        email: lukaarma@gmail.com
    license:
        name: MIT
        url: "https://opensource.org/licenses/MIT"

servers:
    - url: "https://dev.lukaarma.dynu.net/api"
      description: Development environment
    - url: "https://pwm.lukaarma.dynu.net/api"
      description: Production environment

tags: []

paths:
    /user/login:
        post:
            summary: Login to existing user
            description: ""
            parameters: []
            operationId: ""
            security: []

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
                                    format: password

            responses:
                "200":
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - firstName
                                properties:
                                    firstName:
                                        type: string
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /user/signup:
        post:
            summary: Register new user
            description: ""
            parameters: []
            operationId: ""
            security: []

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                                - firstName
                                - lastName
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
                                    format: password
                                firstName:
                                    type: string
                                lastName:
                                    type: string

            responses:
                "200":
                    description: Signup successful
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /user/profile:
        get:
            summary: Get user informations
            description: ""
            parameters: []
            operationId: ""
            responses:
                "200":
                    description: Complete user info
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - email
                                    - firstName
                                    - lastName
                                properties:
                                    email:
                                        type: string
                                    firstName:
                                        type: string
                                    lastName:
                                        type: string
                "500":
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        put:
            summary: Update user informations
            description: ""
            parameters: []
            operationId: ""
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstName:
                                    type: string
                                lastName:
                                    type: string

            responses:
                "200":
                    description: "Update successful, returned new user info"
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - email
                                    - firstName
                                    - lastName
                                properties:
                                    email:
                                        type: string
                                    firstName:
                                        type: string
                                    lastName:
                                        type: string
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

components:
    securitySchemes:
        JWTAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
            description: |-
                Example:
                > Authorization: Bearer

    schemas:
        Error:
            type: object
            required:
                - message
                - code
            properties:
                message:
                    type: string
                code:
                    type: integer

    links: {}

    callbacks: {}

security:
    - JWTAuth: []
